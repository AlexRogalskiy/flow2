error_log stderr notice;

events {
    worker_connections  1024;
}

http {

  log_format main '$remote_addr - $remote_user [$time_local]'
                  ' "$request" $status $body_bytes_sent'
                  ' "$http_referer" "$http_user_agent"'
                  ' act="$upstream_http_x_account"'
                  ' cr=$connection_requests'
                  ' fcip="$http_fly_client_ip"'
                  ' fr="$http_fly_region"'
                  ' reql=$request_length'
                  ' rt=$request_time'
                  ' up="$upstream_addr"'
                  ;

  access_log /dev/stdout main buffer=8k flush=1s;
  keepalive_timeout  60;
  sendfile           on;

  upstream postgrest {
    server unix:/tmp/pgrst.sock;
  }

  server {
    listen 8080;

    # TODO(johnny): We can compose-in additional API services here.

    # All API routes under /v1/ go to PostgREST.
    location /v1/ {
   		proxy_pass http://postgrest/;

      # Rewrite Location headers to strip /v1/.
      proxy_redirect default;

      # Rewrite Content-Location header, which is sadly not covered by proxy_redirect.
      proxy_hide_header Content-Location;
      add_header  Content-Location  /v1$upstream_http_content_location;
    }

    location = / {
      return 301 https://estuary.dev;
    }

    location / {
      # everything else.
      return 404 "Not found";
    }
  }
}