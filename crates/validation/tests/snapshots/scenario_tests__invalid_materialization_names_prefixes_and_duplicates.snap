---
source: crates/validation/tests/scenario_tests.rs
expression: errors
---
[
    Error {
        scope: test://example/catalog.yaml#/materializations/,
        error: materialization name cannot be empty,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/~1bad~1name,
        error: /bad/name cannot be used as name for materialization ("/" is invalid),
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad%20name,
        error: bad name cannot be used as name for materialization (" name" is invalid),
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad!name,
        error: bad!name cannot be used as name for materialization ("!name" is invalid),
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad~1~1name,
        error: bad//name cannot be used as name for materialization ("//name" is invalid),
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad~1name~1,
        error: bad/name/ cannot be used as name for materialization ("/" is invalid),
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/,
        error: materialization  is a prohibited prefix of /bad/name, defined at test://example/catalog.yaml#/materializations/~1bad~1name,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/testing,
        error: materialization testing is a prohibited prefix of testing/int-halve, defined at test://example/int-halve-materialization#/materializations/testing~1int-halve,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/testing~1int-sTRinG,
        error: materialization testing/int-sTRinG has a duplicated definition at test://example/int-string-materialization#/materializations/testing~1int-string,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/,
        error: materializations  and /bad/name (at test://example/catalog.yaml#/materializations/~1bad~1name) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/~1bad~1name,
        error: materializations /bad/name and bad name (at test://example/catalog.yaml#/materializations/bad%20name) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad%20name,
        error: materializations bad name and bad!name (at test://example/catalog.yaml#/materializations/bad!name) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad!name,
        error: materializations bad!name and bad//name (at test://example/catalog.yaml#/materializations/bad~1~1name) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad~1~1name,
        error: materializations bad//name and bad/name/ (at test://example/catalog.yaml#/materializations/bad~1name~1) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/bad~1name~1,
        error: materializations bad/name/ and good (at test://example/catalog.yaml#/materializations/good) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/good,
        error: materializations good and testing (at test://example/catalog.yaml#/materializations/testing) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/testing,
        error: materializations testing and testing/int-sTRinG (at test://example/catalog.yaml#/materializations/testing~1int-sTRinG) have the same target testing/int-string, endpoint, and configuration,
    },
    Error {
        scope: test://example/catalog.yaml#/materializations/testing~1int-sTRinG,
        error: materializations testing/int-sTRinG and testing/int-string (at test://example/int-string-materialization#/materializations/testing~1int-string) have the same target testing/int-string, endpoint, and configuration,
    },
]
